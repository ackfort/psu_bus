import 'package:flutter/material.dart';
import 'package:cloud_firestore/cloud_firestore.dart';

class BusStop {
  final String stopId;
  final String name;
  final double latitude;
  final double longitude;
  final int passengerCount;
  final String busLine; // 'green', 'red', 'blue'

  const BusStop({
    required this.stopId,
    required this.name,
    required this.latitude,
    required this.longitude,
    required this.passengerCount,
    required this.busLine,
  });

  /// ‚úÖ ‡∏ï‡∏±‡∏ß‡∏ä‡πà‡∏ß‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏õ‡∏•‡∏á‡∏à‡∏≤‡∏Å Firestore Document
  factory BusStop.fromFirestore(DocumentSnapshot doc) {
    final data = doc.data() as Map<String, dynamic>? ?? {};

    return BusStop(
      stopId: doc.id, // ‡πÉ‡∏ä‡πâ documentId ‡∏Ç‡∏≠‡∏á Firestore ‡πÄ‡∏õ‡πá‡∏ô stopId
      name: data['name'] ?? '',
      latitude: (data['latitude'] as num?)?.toDouble() ?? 0.0,
      longitude: (data['longitude'] as num?)?.toDouble() ?? 0.0,
      passengerCount:
          (data['passengerCount'] as num?)?.toInt() ??
          0, // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô passengerCount
      busLine: data['busLine'] ?? 'green', // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô busLine
    );
  }

  // üîπ ‡∏™‡∏µ‡∏Ç‡∏≠‡∏á‡∏™‡∏≤‡∏¢‡∏£‡∏ñ‡∏ï‡∏≤‡∏° busLine
  Color get lineColor {
    switch (busLine) {
      case 'red':
        return Colors.red;
      case 'blue':
        return Colors.blue;
      case 'green':
      default:
        return Colors.green;
    }
  }

  // üîπ ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏¢‡∏£‡∏ñ‡πÅ‡∏ö‡∏ö‡πÄ‡∏ï‡πá‡∏°
  String get lineName {
    switch (busLine) {
      case 'red':
        return '‡∏™‡∏≤‡∏¢‡∏™‡∏µ‡πÅ‡∏î‡∏á';
      case 'blue':
        return '‡∏™‡∏≤‡∏¢‡∏™‡∏µ‡∏ô‡πâ‡∏≥‡πÄ‡∏á‡∏¥‡∏ô';
      case 'green':
      default:
        return '‡∏™‡∏≤‡∏¢‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß';
    }
  }

  // üîπ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ô‡∏≤‡πÅ‡∏ô‡πà‡∏ô
  String get status {
    if (passengerCount > 25) return '‡∏´‡∏ô‡∏≤‡πÅ‡∏ô‡πà‡∏ô‡∏°‡∏≤‡∏Å';
    if (passengerCount > 15) return '‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á';
    return '‡πÑ‡∏°‡πà‡∏´‡∏ô‡∏≤‡πÅ‡∏ô‡πà‡∏ô';
  }

  // üîπ ‡∏™‡∏µ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ï‡∏≤‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÇ‡∏î‡∏¢‡∏™‡∏≤‡∏£
  Color get statusColor {
    if (passengerCount > 25) return Colors.red;
    if (passengerCount > 15) return Colors.orange;
    return Colors.green;
  }
}
